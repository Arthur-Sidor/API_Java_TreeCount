name: CI/CD

on:
  push:
    branches:
      - master   # Quando fizer push na branch master = staging
  workflow_dispatch:   # Permite rodar manualmente = produção

jobs:
  build-test-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Tornar mvnw executável
        run: chmod +x ./mvnw

      - name: Build project
        run: ./mvnw clean package -DskipTests=false

      - name: Run tests
        run: ./mvnw test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t arthursidor/treecount-api:latest .

      - name: Tag image for staging
        run: docker tag arthursidor/treecount-api:latest arthursidor/treecount-api:staging

      - name: Push Docker images
        run: |
          docker push arthursidor/treecount-api:latest
          docker push arthursidor/treecount-api:staging

  deploy-staging:
    needs: build-test-docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Staging (simulated)
        run: |
          echo "==== DEPLOY STAGING ===="
          docker pull arthursidor/treecount-api:staging
          docker run -d -p 8081:8080 --name treecount-staging arthursidor/treecount-api:staging
          docker ps -a
          echo "Staging environment running on port 8081"

  deploy-production:
    if: github.event_name == 'workflow_dispatch'  # Só roda manualmente
    needs: build-test-docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production (simulated)
        run: |
          echo "==== DEPLOY PRODUÇÃO ===="
          docker pull arthursidor/treecount-api:latest
          docker run -d -p 8082:8080 --name treecount-prod arthursidor/treecount-api:latest
          docker ps -a
          echo "Production environment running on port 8082"
